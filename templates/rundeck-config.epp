loglevel.default = "<%= $rundeck::config::global::rundeck_config::rd_loglevel %>"
rdeck.base = "<%= $rundeck::config::global::rundeck_config::rdeck_base %>"
rss.enabled = "<%= $rundeck::config::global::rundeck_config::rss_enabled %>"
rundeck.log4j.config.file = "<%= $rundeck::config::global::rundeck_config::properties_dir %>/log4j.properties"

<%- if 'useHMacRequestTokens' in $rundeck::config::global::rundeck_config::security_config.keys { -%>
rundeck.security.useHMacRequestTokens = <%= $rundeck::config::global::rundeck_config::security_config['useHMacRequestTokens'] %>
<%- } -%>
<%- if 'apiCookieAccess' in $rundeck::config::global::rundeck_config::security_config.keys { -%>
rundeck.security.apiCookieAccess.enabled = <%= $rundeck::config::global::rundeck_config::security_config['apiCookieAccess'] %>
<%- } -%>
<%- if 'apiTokensDuration' in $rundeck::config::global::rundeck_config::security_config.keys { -%>
rundeck.api.tokens.duration.max = "<%= $rundeck::config::global::rundeck_config::security_config['apiTokensDuration'] %>"
<%- } -%>
<%- if 'csrfRefererFilterMethod' in $rundeck::config::global::rundeck_config::security_config.keys { -%>
rundeck.security.csrf.referer.filterMethod = <%= $rundeck::config::global::rundeck_config::security_config['csrfRefererFilterMethod'] %>
<%- } -%>
<%- if 'csrfRefererAllowApi' in $rundeck::config::global::rundeck_config::security_config.keys { -%>
rundeck.security.csrf.referer.allowApi = <%= $rundeck::config::global::rundeck_config::security_config['csrfRefererAllowApi'] %>
<%- } -%>
<%- if 'csrfRefererRequireHttps' in $rundeck::config::global::rundeck_config::security_config.keys { -%>
rundeck.security.csrf.referer.requireHttps = <%= $rundeck::config::global::rundeck_config::security_config['csrfRefererRequireHttps'] %>
<%- } -%>
<%- if $rundeck::config::global::rundeck_config::security_config['syncLdapUser'] { -%>
rundeck.security.syncLdapUser = <%= $rundeck::config::global::rundeck_config::security_config['syncLdapUser'] %>
<%- } -%>

dataSource {
  dbCreate = "<%= $rundeck::config::global::rundeck_config::database_config['dbCreate'] %>"
  url = "<%= $rundeck::config::global::rundeck_config::database_config['url'] %>"
  <%- if $rundeck::config::global::rundeck_config::database_config['type'] != 'h2' { -%>
  driverClassName = "<%= $rundeck::config::global::rundeck_config::database_config['driverClassName'] %>"
  username = "<%= $rundeck::config::global::rundeck_config::database_config['username'] %>"
  password = "<%= $rundeck::config::global::rundeck_config::database_config['password'] %>"
  dialect = "<%= $rundeck::config::global::rundeck_config::database_config['dialect'] %>"
  <%- } -%>
}

<%- if !$rundeck::config::global::rundeck_config::mail_config.empty and $rundeck::config::global::rundeck_config::mail_config.keys != ['defaults.from'] { %>
grails {
  mail {
    <%- if $rundeck::config::global::rundeck_config::mail_config['host'] { -%>
    host = "<%= $rundeck::config::global::rundeck_config::mail_config['host'] %>"
    <%- } -%>
    <%- if $rundeck::config::global::rundeck_config::mail_config['username'] { -%>
    username = "<%= $rundeck::config::global::rundeck_config::mail_config['username'] %>"
    <%- } -%>
    <%- if $rundeck::config::global::rundeck_config::mail_config['port'] { -%>
    port = <%= $rundeck::config::global::rundeck_config::mail_config['port'] %>
    <%- } -%>
    <%- if $rundeck::config::global::rundeck_config::mail_config['password'] { -%>
    password = "<%= $rundeck::config::global::rundeck_config::mail_config['password'] %>"
    <%- } -%>
    <%- if $rundeck::config::global::rundeck_config::mail_config['props'] { -%>
    props = [<% $rundeck::config::global::rundeck_config::mail_config['props'].each |$k,$v| {-%>"<%= $k %>":"<%= $v %>",<%} %>]
    <%- } -%>
  }
}
<%- } -%>
<%- if $rundeck::config::global::rundeck_config::mail_config['defaults.from'] { -%>
grails.mail.default.from = "<%= $rundeck::config::global::rundeck_config::mail_config['defaults.from'] %>"
<%- } -%>
grails.serverURL = "<%= $rundeck::config::global::rundeck_config::grails_server_url %>"
rundeck.clusterMode.enabled = "<%= $rundeck::config::global::rundeck_config::clustermode_enabled %>"
<%- if $rundeck::config::global::rundeck_config::execution_mode { -%>
rundeck.executionMode = "<%= $rundeck::config::global::rundeck_config::execution_mode %>"
<%- } -%>

rundeck.projectsStorageType = "<%= $rundeck::config::global::rundeck_config::projects_storage_type %>"
quartz.threadPool.threadCount = "<%= $rundeck::config::global::rundeck_config::quartz_job_threadcount %>"

<%- $rundeck::config::global::rundeck_config::key_storage_config.each |$i, $cfg| { -%>
rundeck.storage.provider."<%= $i+1 %>".type = "<%= $cfg['type'] %>"
rundeck.storage.provider."<%= $i+1 %>".path = "<%= $cfg['path'] %>"
<%- if $cfg['removePathPrefix'] { -%>
rundeck.storage.provider."<%= $i+1 %>".removePathPrefix = <%= $cfg['removePathPrefix'] %>
<%- } -%>
<%- if $cfg['config'] { -%>
<%- $cfg['config'].each |$k, $v| { -%>
rundeck.storage.provider."<%= $i+1 %>".config.<%= $k %> = "<%= $v %>"
<%- } -%>
<%- } -%>
<%- } -%>

<%- if !$rundeck::config::global::rundeck_config::storage_encrypt_config.empty { -%>

  <%- $rundeck::config::global::rundeck_config::storage_encrypt_config.keys.sort.each |$k| { -%>
rundeck.storage.converter."1".<%= $k %> = "<%= $rundeck::config::global::rundeck_config::storage_encrypt_config[$k] %>"
  <%- } -%>
<%- } -%>

<%- $rundeck::config::global::rundeck_config::preauthenticated_config.each  |$k,$v| { -%>
rundeck.security.authorization.preauthenticated.<%= $k %> = "<%= $v %>"
<%- } -%>

<%- $rundeck::config::global::rundeck_config::gui_config.keys.sort.each |$k| {-%>
<%= $k %> = "<%= $rundeck::config::global::rundeck_config::gui_config[$k] %>"
<%- } -%>
